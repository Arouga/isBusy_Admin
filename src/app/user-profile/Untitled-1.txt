--------------------userServices
/*
   updateProfile(id):   Observable<any>{
    let postData = { }
    /*var username = u;
    var password = p;
    var all = username + ':' + password;
    var all_crypted = btoa(all);*/
   /* let myHeaders: HttpHeaders = new HttpHeaders();
    myHeaders = myHeaders.append('Authorization','Basic YWxpOmFsaQ==');
    return this.http.patch('assets/data/user.json/users/'+id+'/update',postData,{ headers: myHeaders, withCredentials: true});
  }

  */



------edit-.this
pdate(id){

    this.userService.updateProfile(id).subscribe(); 

  }

showNotification(from, align){

  const color = Math.floor((Math.random() * 5) + 1);

    this.toastr.info('<span class="now-ui-icons ui-1_bell-53"></span> Profil <b>Modifi√©</b>', '', {
       timeOut: 8000,
       closeButton: true,
       enableHtml: true,
       toastClass: "alert alert-warning alert-with-icon",
       positionClass: 'toast-' + from + '-' +  align
     });
    }


-------------------userprofil.this
personne: any[];
  constructor(userService : UserService) {
    userService.getUsers().subscribe(
        res => {
              console.log(res);
              this.personne = res;
        }, 
        
        err => {
              console.log(err);
        }
      )
   }

